/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-19 04:57:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.ssafy.board.model.BoardDto;
import com.ssafy.board.model.dao.BoardDaoImpl;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.ssafy.board.model.dao.BoardDaoImpl");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.ssafy.board.model.BoardDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

String root = request.getContextPath();

List<BoardDto> list = (List<BoardDto>) request.getAttribute("articles");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <link\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"\n");
      out.write("      rel=\"stylesheet\"\n");
      out.write("      integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\"\n");
      out.write("      crossorigin=\"anonymous\"\n");
      out.write("    />\n");
      out.write("    <link href=\"");
      out.print( root );
      out.write("/assets/css/app.css\" rel=\"stylesheet\" />\n");
      out.write("    <title>SSAFY</title>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <div class=\"row justify-content-center\">\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\n");
      out.write("          <h2 class=\"my-3 py-3 shadow-sm bg-light text-center\">\n");
      out.write("            <mark class=\"sky\">글목록</mark>\n");
      out.write("          </h2>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\n");
      out.write("          <div class=\"row align-self-center mb-2\">\n");
      out.write("            <div class=\"col-md-2 text-start\">\n");
      out.write("              <button type=\"button\" id=\"btn-mv-register\" class=\"btn btn-outline-primary btn-sm\">\n");
      out.write("                글쓰기\n");
      out.write("              </button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col-md-7 offset-3\">\n");
      out.write("              <form class=\"d-flex\">\n");
      out.write("                <select\n");
      out.write("                  id=\"key\"\n");
      out.write("                  class=\"form-select form-select-sm ms-5 me-1 w-50\"\n");
      out.write("                  aria-label=\"검색조건\"\n");
      out.write("                >\n");
      out.write("                  <option selected>검색조건</option>\n");
      out.write("                  <option value=\"articleno\">글번호</option>\n");
      out.write("                  <option value=\"subject\">제목</option>\n");
      out.write("                  <option value=\"userid\">작성자</option>\n");
      out.write("                </select>\n");
      out.write("                <div class=\"input-group input-group-sm\">\n");
      out.write("                  <input type=\"text\" class=\"form-control\" placeholder=\"검색어...\" />\n");
      out.write("                  <button class=\"btn btn-dark\" type=\"button\">검색</button>\n");
      out.write("                </div>\n");
      out.write("              </form>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("          <table class=\"table table-hover\">\n");
      out.write("            <thead>\n");
      out.write("              <tr class=\"text-center\">\n");
      out.write("                <th scope=\"col\">글번호</th>\n");
      out.write("                <th scope=\"col\">제목</th>\n");
      out.write("                <th scope=\"col\">작성자</th>\n");
      out.write("                <th scope=\"col\">조회수</th>\n");
      out.write("                <th scope=\"col\">작성일</th>\n");
      out.write("              </tr>\n");
      out.write("            </thead>\n");
      out.write("            <tbody>\n");

for(BoardDto boardDto : list) {

      out.write("           \n");
      out.write("              <tr class=\"text-center\">\n");
      out.write("                <th scope=\"row\">");
      out.print( boardDto.getArticleNo() );
      out.write("</th>\n");
      out.write("                <td class=\"text-start\">\n");
      out.write("                  <a\n");
      out.write("                    href=\"#\"\n");
      out.write("                    class=\"article-title link-dark\"\n");
      out.write("                    data-no=\"");
      out.print( boardDto.getArticleNo() );
      out.write("\"\n");
      out.write("                    style=\"text-decoration: none\"\n");
      out.write("                  >\n");
      out.write("                    ");
      out.print( boardDto.getSubject() );
      out.write("\n");
      out.write("                  </a>\n");
      out.write("                </td>\n");
      out.write("                <td>");
      out.print( boardDto.getUserId() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( boardDto.getHit() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( boardDto.getRegisterTime() );
      out.write("</td>\n");
      out.write("              </tr>\n");

}

      out.write("              \n");
      out.write("            </tbody>\n");
      out.write("          </table>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row\">\n");
      out.write("          <ul class=\"pagination justify-content-center\">\n");
      out.write("            <li class=\"page-item\">\n");
      out.write("              <a class=\"page-link\" href=\"#\">이전</a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\n");
      out.write("            <li class=\"page-item active\">\n");
      out.write("              <a class=\"page-link\" href=\"#\">2</a>\n");
      out.write("            </li>\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">4</a></li>\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">5</a></li>\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">다음</a></li>\n");
      out.write("          </ul>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <script\n");
      out.write("      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("      integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\"\n");
      out.write("      crossorigin=\"anonymous\"\n");
      out.write("    ></script>\n");
      out.write("    <script>\n");
      out.write("      let titles = document.querySelectorAll(\".article-title\");\n");
      out.write("      titles.forEach(function (title) {\n");
      out.write("        title.addEventListener(\"click\", function () {\n");
      out.write("          console.log(this.getAttribute(\"data-no\"));\n");
      out.write("          location.href = \"");
      out.print( root );
      out.write("/article?action=view&articleno=\" + this.getAttribute(\"data-no\");\n");
      out.write("        });\n");
      out.write("      });\n");
      out.write("\n");
      out.write("      document.querySelector(\"#btn-mv-register\").addEventListener(\"click\", function () {\n");
      out.write("        location.href = \"");
      out.print( root );
      out.write("/article?action=mvwrite\";\n");
      out.write("      });\n");
      out.write("    </script>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
