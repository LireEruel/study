/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-20 06:58:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(' ');
 String root = request.getContextPath(); 
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <link\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"\n");
      out.write("      rel=\"stylesheet\"\n");
      out.write("      integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\"\n");
      out.write("      crossorigin=\"anonymous\"\n");
      out.write("    />\n");
      out.write("    <link href=\"");
      out.print( root );
      out.write("/assets/css/app.css\" rel=\"stylesheet\" />\n");
      out.write("    <title>SSAFY</title>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <div class=\"row justify-content-center\">\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\n");
      out.write("          <h2 class=\"my-3 py-3 shadow-sm bg-light text-center\">\n");
      out.write("            <mark class=\"orange\">회원가입</mark>\n");
      out.write("          </h2>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\n");
      out.write("          <form id=\"form-join\" method=\"POST\" action=\"\">\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("              <label for=\"username\" class=\"form-label\">이름 : </label>\n");
      out.write("              <input\n");
      out.write("                type=\"text\"\n");
      out.write("                class=\"form-control\"\n");
      out.write("                id=\"username\"\n");
      out.write("                name=\"username\"\n");
      out.write("                placeholder=\"이름...\"\n");
      out.write("              />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("              <label for=\"userid\" class=\"form-label\">아이디 : </label>\n");
      out.write("              <input\n");
      out.write("                type=\"text\"\n");
      out.write("                class=\"form-control\"\n");
      out.write("                id=\"userid\"\n");
      out.write("                name=\"userid\"\n");
      out.write("                placeholder=\"아이디...\"\n");
      out.write("              />\n");
      out.write("            </div>\n");
      out.write("            <div id=\"id-result\" class=\"mb-3\"></div>\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("              <label for=\"userpwd\" class=\"form-label\">비밀번호 : </label>\n");
      out.write("              <input\n");
      out.write("                type=\"text\"\n");
      out.write("                class=\"form-control\"\n");
      out.write("                id=\"userpwd\"\n");
      out.write("                name=\"userpwd\"\n");
      out.write("                placeholder=\"비밀번호...\"\n");
      out.write("              />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("              <label for=\"pwdcheck\" class=\"form-label\">비밀번호확인 : </label>\n");
      out.write("              <input\n");
      out.write("                type=\"text\"\n");
      out.write("                class=\"form-control\"\n");
      out.write("                id=\"pwdcheck\"\n");
      out.write("                placeholder=\"비밀번호확인...\"\n");
      out.write("              />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("              <label for=\"emailid\" class=\"form-label\">이메일 : </label>\n");
      out.write("              <div class=\"input-group\">\n");
      out.write("                <input\n");
      out.write("                  type=\"text\"\n");
      out.write("                  class=\"form-control\"\n");
      out.write("                  id=\"emailid\"\n");
      out.write("                  name=\"emailid\"\n");
      out.write("                  placeholder=\"이메일아이디\"\n");
      out.write("                />\n");
      out.write("                <span class=\"input-group-text\">@</span>\n");
      out.write("                <select\n");
      out.write("                  class=\"form-select\"\n");
      out.write("                  id=\"emaildomain\"\n");
      out.write("                  name=\"emaildomain\"\n");
      out.write("                  aria-label=\"이메일 도메인 선택\"\n");
      out.write("                >\n");
      out.write("                  <option selected>선택</option>\n");
      out.write("                  <option value=\"ssafy.com\">싸피</option>\n");
      out.write("                  <option value=\"google.com\">구글</option>\n");
      out.write("                  <option value=\"naver.com\">네이버</option>\n");
      out.write("                  <option value=\"kakao.com\">카카오</option>\n");
      out.write("                </select>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("            <!-- \n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("              <label for=\"sido\" class=\"form-label\">지역 : </label>\n");
      out.write("              <div class=\"input-group\">\n");
      out.write("                <select class=\"form-select me-1\" id=\"sido\" aria-label=\"시도\">\n");
      out.write("                  <option selected>시도선택</option>\n");
      out.write("                  <option value=\"1100000000\">서울특별시</option>\n");
      out.write("                  <option value=\"2200000000\">경기도</option>\n");
      out.write("                  <option value=\"3300000000\">강원도</option>\n");
      out.write("                  <option value=\"4400000000\">충청도</option>\n");
      out.write("                </select>\n");
      out.write("                <select class=\"form-select\" id=\"gugun\" aria-label=\"구군\">\n");
      out.write("                  <option selected>구군선택</option>\n");
      out.write("                  <option value=\"1111000000\">종로구</option>\n");
      out.write("                  <option value=\"1112000000\">중구</option>\n");
      out.write("                  <option value=\"1113000000\">서초구</option>\n");
      out.write("                  <option value=\"1114000000\">강남구</option>\n");
      out.write("                </select>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("             -->\n");
      out.write("            <div class=\"col-auto text-center\">\n");
      out.write("              <button\n");
      out.write("                type=\"button\"\n");
      out.write("                id=\"btn-join\"\n");
      out.write("                class=\"btn btn-outline-primary mb-3\"\n");
      out.write("              >\n");
      out.write("                회원가입\n");
      out.write("              </button>\n");
      out.write("              <button type=\"button\" class=\"btn btn-outline-success mb-3\">\n");
      out.write("                초기화\n");
      out.write("              </button>\n");
      out.write("            </div>\n");
      out.write("          </form>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <script\n");
      out.write("      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("      integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\"\n");
      out.write("      crossorigin=\"anonymous\"\n");
      out.write("    ></script>\n");
      out.write("    <script>\n");
      out.write("      let resultDiv = document.querySelector(\"#id-result\");\n");
      out.write("  	  let isValidId = false;\n");
      out.write("      document.querySelector(\"#userid\").addEventListener(\"keyup\", (e) => {\n");
      out.write("        let userid = e.target.value;\n");
      out.write("\n");
      out.write("        let len = userid.length;\n");
      out.write("        if (len < 4 || len > 16) {\n");
      out.write("          resultDiv.innerHTML = \"아이디는 4자이상 16자리 이하입니다.\";\n");
      out.write("          resultDiv.classList.add(\"mb-3\");\n");
      out.write("          resultDiv.classList.add(\"primary\");\n");
      out.write("        } else {\n");
      out.write("          resultDiv.innerHTML = \"\";\n");
      out.write("          resultDiv.classList.remove(\"mb-3\");\n");
      out.write("          resultDiv.classList.remove(\"primary\");\n");
      out.write("          isValidId = false;\n");
      out.write("          let url = \"");
      out.print( root );
      out.write("/user?action=idcheck&checkid=\" + userid;\n");
      out.write("          fetch(url)\n");
      out.write("            .then(res => res.text())\n");
      out.write("            .then(data => resultView(data));\n");
      out.write("        }\n");
      out.write("      });\n");
      out.write("\n");
      out.write("      function resultView(data) {\n");
      out.write("\n");
      out.write("        let val = data.split(\",\");\n");
      out.write("        let id = val[0];\n");
      out.write("        let cnt = val[1];\n");
      out.write("        console.log(val, id, cnt);\n");
      out.write("        if (cnt == 0) {\n");
      out.write("          resultDiv.innerHTML = id + \"는 사용가능합니다.\";\n");
      out.write("          resultDiv.classList.add(\"text-primary\");\n");
      out.write("          isValidId = true;\n");
      out.write("        } else {\n");
      out.write("          resultDiv.innerHTML = id + \"는 사용 불가능 합니다.\";\n");
      out.write("          resultDiv.classList.add(\"text-danger\");\n");
      out.write("          isValidId = false;\n");
      out.write("        }\n");
      out.write("      }\n");
      out.write("      document\n");
      out.write("        .querySelector(\"#btn-join\")\n");
      out.write("        .addEventListener(\"click\", function () {\n");
      out.write("          if (!document.querySelector(\"#username\").value) {\n");
      out.write("            alert(\"이름 입력!!\");\n");
      out.write("            return;\n");
      out.write("          } else if (!document.querySelector(\"#userid\").value) {\n");
      out.write("            alert(\"아이디 입력!!\");\n");
      out.write("            return;\n");
      out.write("          }else if (!isValidId){\n");
      out.write("        	alert(\"아이디 유효성 체크\");\n");
      out.write("        	return;\n");
      out.write("          }  \n");
      out.write("          else if (!document.querySelector(\"#userpwd\").value) {\n");
      out.write("            alert(\"비밀번호 입력!!\");\n");
      out.write("            return;\n");
      out.write("          } else if (\n");
      out.write("            document.querySelector(\"#userpwd\").value !=\n");
      out.write("            document.querySelector(\"#pwdcheck\").value\n");
      out.write("          ) {\n");
      out.write("            alert(\"비밀번호 확인!!\");\n");
      out.write("            return;\n");
      out.write("          } else {\n");
      out.write("            let form = document.querySelector(\"#form-join\");\n");
      out.write("            form.setAttribute(\"action\", \"");
      out.print( root );
      out.write("/user?action=join\");\n");
      out.write("            form.submit();\n");
      out.write("          }\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
